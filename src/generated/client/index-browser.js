
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  Decimal,
  objectEnumValues,
  makeStrictEnum,
  Public,
  getRuntime,
  skip
} = require('./runtime/index-browser.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.16.3
 * Query Engine version: bb420e667c1820a8c05a38023385f6cc7ef8e83a
 */
Prisma.prismaVersion = {
  client: "6.16.3",
  engine: "bb420e667c1820a8c05a38023385f6cc7ef8e83a"
}

Prisma.PrismaClientKnownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientKnownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)};
Prisma.PrismaClientUnknownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientUnknownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientRustPanicError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientRustPanicError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientInitializationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientInitializationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientValidationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientValidationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`sqltag is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.empty = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`empty is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.join = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`join is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.raw = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`raw is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.getExtensionContext is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.defineExtension = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.defineExtension is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}



/**
 * Enums
 */

exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.ConfiguracionScalarFieldEnum = {
  id: 'id',
  nombre_empresa: 'nombre_empresa',
  ruc: 'ruc',
  razon_social: 'razon_social',
  direccion: 'direccion',
  telefono: 'telefono',
  email: 'email',
  codigo_sucursal: 'codigo_sucursal',
  punto_facturacion: 'punto_facturacion',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.ConexionHKAScalarFieldEnum = {
  id: 'id',
  ambiente: 'ambiente',
  token_empresa: 'token_empresa',
  token_password: 'token_password',
  url_base: 'url_base',
  activo: 'activo',
  fecha_activacion: 'fecha_activacion',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.PuntoRecepcionScalarFieldEnum = {
  id: 'id',
  nombre: 'nombre',
  metodo: 'metodo',
  activo: 'activo',
  api_url: 'api_url',
  api_method: 'api_method',
  api_headers: 'api_headers',
  api_frecuencia: 'api_frecuencia',
  db_tipo: 'db_tipo',
  db_host: 'db_host',
  db_port: 'db_port',
  db_database: 'db_database',
  db_usuario: 'db_usuario',
  db_password: 'db_password',
  db_tabla: 'db_tabla',
  ftp_host: 'ftp_host',
  ftp_port: 'ftp_port',
  ftp_usuario: 'ftp_usuario',
  ftp_password: 'ftp_password',
  mapeo_campos: 'mapeo_campos',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.FacturaScalarFieldEnum = {
  id: 'id',
  modo: 'modo',
  numero_factura: 'numero_factura',
  punto_facturacion: 'punto_facturacion',
  codigo_sucursal: 'codigo_sucursal',
  tipo_documento: 'tipo_documento',
  estado: 'estado',
  cufe: 'cufe',
  cliente_tipo: 'cliente_tipo',
  cliente_ruc: 'cliente_ruc',
  cliente_nombre: 'cliente_nombre',
  cliente_direccion: 'cliente_direccion',
  cliente_email: 'cliente_email',
  total_neto: 'total_neto',
  total_itbms: 'total_itbms',
  total_factura: 'total_factura',
  documento_original: 'documento_original',
  hka_response: 'hka_response',
  xml_firmado: 'xml_firmado',
  pdf_url: 'pdf_url',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.FacturaItemScalarFieldEnum = {
  id: 'id',
  factura_id: 'factura_id',
  codigo: 'codigo',
  descripcion: 'descripcion',
  cantidad: 'cantidad',
  unidad_medida: 'unidad_medida',
  precio_unitario: 'precio_unitario',
  descuento: 'descuento',
  tasa_itbms: 'tasa_itbms',
  valor_itbms: 'valor_itbms',
  total: 'total',
  createdAt: 'createdAt'
};

exports.Prisma.HKALogScalarFieldEnum = {
  id: 'id',
  factura_id: 'factura_id',
  operacion: 'operacion',
  request: 'request',
  response: 'response',
  status_code: 'status_code',
  createdAt: 'createdAt'
};

exports.Prisma.FacturaColaScalarFieldEnum = {
  id: 'id',
  punto_recepcion: 'punto_recepcion',
  datos_originales: 'datos_originales',
  estado: 'estado',
  intentos: 'intentos',
  error_mensaje: 'error_mensaje',
  createdAt: 'createdAt',
  procesadaAt: 'procesadaAt'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.NullableJsonNullValueInput = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull
};

exports.Prisma.JsonNullValueInput = {
  JsonNull: Prisma.JsonNull
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};

exports.Prisma.JsonNullValueFilter = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull,
  AnyNull: Prisma.AnyNull
};


exports.Prisma.ModelName = {
  Configuracion: 'Configuracion',
  ConexionHKA: 'ConexionHKA',
  PuntoRecepcion: 'PuntoRecepcion',
  Factura: 'Factura',
  FacturaItem: 'FacturaItem',
  HKALog: 'HKALog',
  FacturaCola: 'FacturaCola'
};

/**
 * This is a stub Prisma Client that will error at runtime if called.
 */
class PrismaClient {
  constructor() {
    return new Proxy(this, {
      get(target, prop) {
        let message
        const runtime = getRuntime()
        if (runtime.isEdge) {
          message = `PrismaClient is not configured to run in ${runtime.prettyName}. In order to run Prisma Client on edge runtime, either:
- Use Prisma Accelerate: https://pris.ly/d/accelerate
- Use Driver Adapters: https://pris.ly/d/driver-adapters
`;
        } else {
          message = 'PrismaClient is unable to run in this browser environment, or has been bundled for the browser (running in `' + runtime.prettyName + '`).'
        }

        message += `
If this is unexpected, please open an issue: https://pris.ly/prisma-prisma-bug-report`

        throw new Error(message)
      }
    })
  }
}

exports.PrismaClient = PrismaClient

Object.assign(exports, Prisma)
